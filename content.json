{"meta":{"title":"BIGxiyu's Personal Site","subtitle":"","description":"","author":"BIGxiyu","url":"http://example.com","root":"/"},"pages":[{"title":"repository","date":"2024-05-13T16:12:14.000Z","updated":"2024-05-13T16:13:12.306Z","comments":false,"path":"repository/index.html","permalink":"http://example.com/repository/index.html","excerpt":"","text":""},{"title":"categories","date":"2024-05-13T16:07:26.000Z","updated":"2024-05-14T08:12:52.830Z","comments":false,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2024-05-13T16:12:05.000Z","updated":"2024-05-13T16:13:44.579Z","comments":false,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"acwing基础课——基础算法","slug":"acwing基础课——基础算法","date":"2024-05-14T08:14:51.000Z","updated":"2024-05-15T03:08:43.311Z","comments":true,"path":"2024/05/14/acwing基础课——基础算法/","permalink":"http://example.com/2024/05/14/acwing%E5%9F%BA%E7%A1%80%E8%AF%BE%E2%80%94%E2%80%94%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/","excerpt":"","text":"排序快速排序算法思想：分治 算法步骤： 确定分界点 调整位置 递归处理左右两段 时间复杂度：O(nlogn) 代码模板： 1234567891011121314void quick_sort(int q[], int l, int r)&#123; if(l &gt;= r) return; int i = l - 1, j = r + 1, x = q[l + r &gt;&gt; 1]; while(i &lt; j) &#123; do i++; while(q[i] &lt; x); do j--; while(q[j] &gt; x); if(i &lt; j) swap(q[i], q[j]); &#125; quick_sort(q, l, j); quick_sort(q, j+1; r);&#125; 归并排序算法思想：分治 算法步骤： 找分界点，mid 递归排序 归并——合二为一 时间复杂度：O(nlogn) 代码模板： 1234567891011121314151617181920212223void merge_sort(int q[], int l, int r)&#123; if(l &gt;= r) return; int mid = l + r &gt;&gt; 1; // 递归 merge_sort(q, l, mid); merge_sort(q, mid + 1, r); // 归并 int temp[N]; int k = 0, i = l, j = mid + 1; while (i &lt;= mid &amp;&amp; j &lt;= r) &#123; if (q[i] &lt;= q[j]) temp[k++] = q[i++]; else temp[k++] = q[j++]; &#125; while(i &lt;= mid) temp[k++] = q[i++]; while(j &lt;= r) temp[k++] = q[j++]; for(i = l, j = 0; i &lt;= r; i++, j++) q[i] = temp[j];&#125; 二分法整数二分算法模板： 12345678910111213141516171819202122232425262728bool checl(int x)&#123; // 检查x是否满足某种性质&#125;// 将区间分为[l, mid]和[mid + 1, r]int bsearch_1(int l, int r)&#123; while(l &lt; r) &#123; int mid = l + r &gt;&gt; 1; if(check(mid)) r = mid; else l = mid + 1; &#125; return l;&#125;// 将区间分为[l, mid - 1]和[mid, r]int bsearch_2(int l, int r)&#123; while(l &lt; r) &#123; int mid = l + r + 1 &gt;&gt; 1; if(check(mid)) l = mid; else r = mid - 1; &#125; return l;&#125; 浮点数二分算法模板： 12345678910111213141516bool checl(int x)&#123; // 检查x是否满足某种性质&#125;double bsearch_3(double l, double r)&#123; const double eps = 1e-6; //eps代表精度 while(r - l &gt; eps) &#123; double mid = (l + r) / 2; if(check(mid)) r = mid; else l = mid; &#125; return l;&#125;","categories":[{"name":"acwing算法基础课笔记","slug":"acwing算法基础课笔记","permalink":"http://example.com/categories/acwing%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"算法","slug":"算法","permalink":"http://example.com/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"Hello World","slug":"hello-world","date":"2024-04-21T12:25:06.352Z","updated":"2024-05-15T03:09:44.771Z","comments":true,"path":"2024/04/21/hello-world/","permalink":"http://example.com/2024/04/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"acwing算法基础课笔记","slug":"acwing算法基础课笔记","permalink":"http://example.com/categories/acwing%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"算法","slug":"算法","permalink":"http://example.com/tags/%E7%AE%97%E6%B3%95/"}]}